{"ast":null,"code":"import _toConsumableArray from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/legrin/Ira/NewYear/quest/src/components/tasks/Form.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Modal from './Modal';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      answers: _this.props.answers,\n      minimumAnswer: 0,\n      attempt: 1,\n      gotPoints: false,\n      earnedPoints: 0,\n      totalPoints: 0\n    };\n\n    _this.onChangeHandler = function (event) {\n      if (event.target.value.length <= +_this.props.maxlength) {\n        var newAnswers = _toConsumableArray(_this.state.answers);\n\n        newAnswers[event.target.name] = event.target.value;\n        var countAnswers = 0;\n        newAnswers.forEach(function (item) {\n          if (item !== \"\") {\n            countAnswers++;\n          }\n        });\n\n        _this.setState({\n          answers: _toConsumableArray(newAnswers),\n          minimumAnswer: countAnswers\n        });\n      }\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n      /* for API request\n      Send: team name, number task, answers (to validate), attempt number (depends points multiplication)\n      Get: ok/ko, earned points, total points\n      const team = this.props.team;\n      const taskNbr = +this.props.history.location.hash.substring(1);\n      const attempt = this.state.attempt;\n      */\n\n      var task = +_this.props.history.location.hash.substring(1);\n      console.log(_this.state);\n\n      if (task === 1) {\n        var body = {\n          teamName: _this.props.team,\n          task: 1,\n          time: Date.now(),\n          answers: _this.state.answers,\n          try: _this.state.attempt\n        };\n        axios.post('http://localhost:8080/index.php/api/first_task', body).then(function (res) {\n          console.log(res.data);\n          var nextAttempt = _this.state.attempt + 1;\n\n          _this.setState({\n            attempt: nextAttempt,\n            gotPoints: true,\n            earnedPoints: res.data.points,\n            totalPoints: res.data.total\n          }); // this.props.changeStep();\n\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    _this.goNext = function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n\n      _this.props.changeStep();\n    };\n\n    _this.retry = function () {\n      _this.setState({\n        isOpen: !_this.state.isOpen\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var stage = +this.props.history.location.hash.substring(1);\n      return React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.answers.map(function (item, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: i,\n          type: \"text\",\n          maxLength: _this2.props.maxlength,\n          name: i,\n          value: item,\n          onChange: _this2.onChangeHandler.bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, i + 1, \".\"));\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: stage < 4 && this.state.minimumAnswer < 3,\n        style: stage < 4 && this.state.minimumAnswer < 3 ? {\n          backgroundColor: '#85e085',\n          cursor: 'auto'\n        } : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B\"), this.state.gotPoints && React.createElement(\"p\", {\n        style: {\n          fontWeight: 'bold',\n          padding: '5px',\n          background: '#e5bf9a'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u043F\\u043E\\u043B\\u0443\\u0447\\u0438\\u043B\\u0438: \", this.state.earnedPoints), this.state.gotPoints && React.createElement(\"button\", {\n        onClick: this.goNext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u043B\\u044C\\u0448\\u0435\")));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/Users/legrin/Ira/NewYear/quest/src/components/tasks/Form.jsx"],"names":["React","Component","axios","Modal","Form","state","answers","props","minimumAnswer","attempt","gotPoints","earnedPoints","totalPoints","onChangeHandler","event","target","value","length","maxlength","newAnswers","name","countAnswers","forEach","item","setState","submitHandler","preventDefault","task","history","location","hash","substring","console","log","body","teamName","team","time","Date","now","try","post","then","res","data","nextAttempt","points","total","catch","error","goNext","isOpen","changeStep","retry","stage","bind","map","i","backgroundColor","cursor","fontWeight","padding","background"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Modal from './Modal';\n\nclass Form extends Component {\n\n    state = {\n        answers: this.props.answers,\n        minimumAnswer: 0,\n        attempt: 1,\n        gotPoints: false,\n        earnedPoints: 0,\n        totalPoints: 0\n    }\n\n    onChangeHandler = (event) => {\n        if (event.target.value.length <= +this.props.maxlength) {\n            const newAnswers = [...this.state.answers];\n            newAnswers[event.target.name] = event.target.value;\n            let countAnswers = 0;\n            newAnswers.forEach((item) => {\n                if (item !== \"\") {\n                    countAnswers++;\n                }\n            });\n            this.setState({\n                answers: [...newAnswers],\n                minimumAnswer: countAnswers\n            })\n        }\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        /* for API request\n        Send: team name, number task, answers (to validate), attempt number (depends points multiplication)\n        Get: ok/ko, earned points, total points\n        const team = this.props.team;\n        const taskNbr = +this.props.history.location.hash.substring(1);\n        const attempt = this.state.attempt;\n        */\n        const task = +this.props.history.location.hash.substring(1);\n        console.log(this.state);\n        if (task === 1) {\n            const body = {\n                teamName: this.props.team,\n                task: 1,\n                time: Date.now(),\n                answers: this.state.answers,\n                try: this.state.attempt\n            }\n            axios.post('http://localhost:8080/index.php/api/first_task', body)\n                .then(res => {\n                    console.log(res.data);\n                    const nextAttempt = this.state.attempt + 1;\n                    this.setState({\n                        attempt: nextAttempt,\n                        gotPoints: true,\n                        earnedPoints: res.data.points,\n                        totalPoints: res.data.total\n                    });\n                    // this.props.changeStep();\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n    }\n\n    goNext = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n        this.props.changeStep();\n    }\n\n    retry = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        const stage = +this.props.history.location.hash.substring(1);\n        return (\n            <div className=\"Form\">\n                {/* <Modal show={this.state.isOpen}\n                    goNext={this.goNext}\n                    retry={this.retry}>\n                    <div style={{textAlign: 'left'}}>\n                        <p>\n                            <b>За задание:</b> {this.state.earnedPoints}\n                        </p>\n                        <p>\n                            <b>Всего:</b> {this.state.totalPoints}\n                        </p>\n                    </div>\n                    <p>\n                        <i>Можете попробовать еще раз, но напоминаем: вторая попытка - очки умножаются на 0.8, третья - 0.6</i>\n                    </p>\n                </Modal> */}\n                <form onSubmit={this.submitHandler.bind(this)}>\n                    {this.state.answers.map((item, i) => {\n                        return (\n                            <div key={i}>\n                                <input\n                                    id={i}\n                                    type=\"text\"\n                                    maxLength={this.props.maxlength}\n                                    name={i}\n                                    value={item}\n                                    onChange={this.onChangeHandler.bind(this)}\n                                />\n                                <label htmlFor={i}>{i + 1}.</label>\n                            </div>\n                        )\n                    })}\n                    <button\n                        type=\"submit\"\n                        disabled={(stage < 4) && this.state.minimumAnswer < 3}\n                        style={(stage < 4) && this.state.minimumAnswer < 3 ? \n                            {\n                                backgroundColor: '#85e085',\n                                cursor:'auto'\n                            }\n                            :\n                            null\n                        }\n                    >\n                        Отправить ответы\n                    </button>\n                    {this.state.gotPoints && <p style={{fontWeight: 'bold', padding: '5px', background: '#e5bf9a'}}>Вы получили: {this.state.earnedPoints}</p>}\n                    {this.state.gotPoints && <button onClick={this.goNext}>Дальше</button>}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}