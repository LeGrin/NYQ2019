{"ast":null,"code":"import _objectSpread from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/legrin/Ira/NewYear/quest/src/components/tasks/Form.jsx\";\nimport React, { Component } from 'react';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      answers: {\n        answer1: \"\",\n        answer2: \"\",\n        answer3: \"\",\n        answer4: \"\",\n        answer5: \"\"\n      },\n      minimumAnswer: 0,\n      attempt: 1\n    };\n\n    _this.onChangeHandler = function (event) {\n      var newAnswers = _this.state.answers;\n      newAnswers[event.target.name] = event.target.value;\n      var countAnswers = 0;\n\n      for (var i in _this.state.answers) {\n        if (_this.state.answers[i] !== \"\") {\n          countAnswers++;\n        }\n      }\n\n      ;\n\n      _this.setState({\n        answers: _objectSpread({}, newAnswers),\n        minimumAnswer: countAnswers\n      });\n    };\n\n    _this.submitHandler = function (event) {\n      //send to API team name, number task, answers, attemp number\n      event.preventDefault();\n      console.log(\"submit: team\", _this.props.team, \"task:\", _this.props.history.location.hash, \"attempt:\", _this.state.attempt);\n      var team = _this.props.team;\n      var newState = _this.state;\n\n      _this.setState(_objectSpread({}, newState, {\n        attempt: newState.attempt + 1\n      }));\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"submit: team\", this.props.team, \"task:\", this.props.history, \"attempt:\", this.state.attempt);\n      return React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"answer1\",\n        type: \"text\",\n        maxLength: \"20\",\n        name: \"answer1\",\n        value: this.state.answer1,\n        onChange: this.onChangeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"answer1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"1.\"), React.createElement(\"input\", {\n        id: \"answer2\",\n        type: \"text\",\n        maxLength: \"20\",\n        name: \"answer2\",\n        value: this.state.answer2,\n        onChange: this.onChangeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"answer1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"2.\"), React.createElement(\"input\", {\n        id: \"answer3\",\n        type: \"text\",\n        maxLength: \"20\",\n        name: \"answer3\",\n        value: this.state.answer3,\n        onChange: this.onChangeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"answer1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"3.\"), React.createElement(\"input\", {\n        id: \"answer4\",\n        type: \"text\",\n        maxLength: \"20\",\n        name: \"answer4\",\n        value: this.state.answer4,\n        onChange: this.onChangeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"answer1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"4.\"), React.createElement(\"input\", {\n        id: \"answer5\",\n        type: \"text\",\n        maxLength: \"20\",\n        name: \"answer5\",\n        value: this.state.answer5,\n        onChange: this.onChangeHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"answer1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"5.\"), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: this.state.attempt > 3 || this.state.minimumAnswer < 3,\n        style: this.state.attempt > 3 || this.state.minimumAnswer < 3 ? {\n          backgroundColor: '#85e085',\n          cursor: 'auto'\n        } : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B\")));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/Users/legrin/Ira/NewYear/quest/src/components/tasks/Form.jsx"],"names":["React","Component","Form","state","answers","answer1","answer2","answer3","answer4","answer5","minimumAnswer","attempt","onChangeHandler","event","newAnswers","target","name","value","countAnswers","i","setState","submitHandler","preventDefault","console","log","props","team","history","location","hash","newState","bind","backgroundColor","cursor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n\nclass Form extends Component {\n\n    state = {\n        answers: {\n            answer1: \"\",\n            answer2: \"\",\n            answer3: \"\",\n            answer4: \"\",\n            answer5: \"\",\n        },\n        minimumAnswer: 0,\n        attempt: 1\n    }\n\n    onChangeHandler = (event) => {\n        const newAnswers = this.state.answers;\n        newAnswers[event.target.name] = event.target.value;\n        let countAnswers = 0;\n        for (let i in this.state.answers) {\n            if (this.state.answers[i] !== \"\") {\n                countAnswers++;\n            }\n        };\n        this.setState({\n            answers: {...newAnswers},\n            minimumAnswer: countAnswers\n        })\n    }\n\n    submitHandler = (event) => {\n        //send to API team name, number task, answers, attemp number\n        event.preventDefault();\n        console.log(\"submit: team\", this.props.team, \"task:\", this.props.history.location.hash, \"attempt:\", this.state.attempt);\n        const team = this.props.team;\n        const newState = this.state;\n        this.setState({\n            ...newState,\n            attempt: newState.attempt + 1\n        })\n    }\n\n    render() {\n        console.log(\"submit: team\", this.props.team, \"task:\", this.props.history, \"attempt:\", this.state.attempt);\n\n        return (\n            <div className=\"Form\">\n                <form onSubmit={this.submitHandler.bind(this)}>\n                    <input\n                        id=\"answer1\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer1\"\n                        value={this.state.answer1}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer1\">1.</label>\n                    <input\n                        id=\"answer2\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer2\"\n                        value={this.state.answer2}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer1\">2.</label>\n                    <input\n                        id=\"answer3\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer3\"\n                        value={this.state.answer3}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer1\">3.</label>\n                    <input\n                        id=\"answer4\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer4\"\n                        value={this.state.answer4}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer1\">4.</label>\n                    <input\n                        id=\"answer5\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer5\"\n                        value={this.state.answer5}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer1\">5.</label>\n                    <button\n                        type=\"submit\"\n                        disabled={this.state.attempt > 3 || this.state.minimumAnswer < 3}\n                        style={\n                            this.state.attempt > 3 || this.state.minimumAnswer < 3 ? \n                                {\n                                    backgroundColor: '#85e085',\n                                    cursor:'auto'\n                                }\n                                :\n                                null\n                        }\n                    >\n                        Отправить ответы\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}