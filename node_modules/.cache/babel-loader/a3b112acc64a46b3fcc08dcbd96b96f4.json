{"ast":null,"code":"import _objectSpread from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/legrin/Ira/NewYear/quest/src/components/tasks/Form.jsx\";\nimport React, { Component } from 'react';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      answers: _this.props.answers,\n      minimumAnswer: 0,\n      attempt: 1\n    };\n\n    _this.onChangeHandler = function (event) {\n      var newAnswers = _this.state.answers;\n      newAnswers[event.target.name] = event.target.value;\n      var countAnswers = 0; // for (let i in this.state.answers) {\n      //     if (this.state.answers[i] !== \"\") {\n      //         countAnswers++;\n      //     }\n      // };\n\n      newAnswers.forEach(function (item) {\n        if (item === \"\") {\n          countAnswers++;\n        }\n      });\n\n      _this.setState({\n        answers: _objectSpread({}, newAnswers),\n        minimumAnswer: countAnswers\n      });\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n      /* for API request\n      Send: team name, number task, answers (to validate), attempt number (depends points multiplication)\n      Get: ok/ko, earned points, total points\n      const team = this.props.team;\n      const taskNbr = +this.props.history.location.hash.substring(1);\n      const attempt = this.state.attempt;\n      */\n\n      var newState = _this.state;\n\n      _this.setState(_objectSpread({}, newState, {\n        attempt: newState.attempt + 1\n      }));\n\n      _this.props.changeStep();\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.answers.map(function (item, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: i,\n          type: \"text\",\n          maxLength: \"20\",\n          name: i,\n          value: item,\n          onChange: _this2.onChangeHandler.bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, i, \".\"));\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: this.state.attempt > 3 || this.state.minimumAnswer < 3,\n        style: this.state.attempt > 3 || this.state.minimumAnswer < 3 ? {\n          backgroundColor: '#85e085',\n          cursor: 'auto'\n        } : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B\")));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/Users/legrin/Ira/NewYear/quest/src/components/tasks/Form.jsx"],"names":["React","Component","Form","state","answers","props","minimumAnswer","attempt","onChangeHandler","event","newAnswers","target","name","value","countAnswers","forEach","item","setState","submitHandler","preventDefault","newState","changeStep","bind","map","i","backgroundColor","cursor"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAGMC,I;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE,MAAKC,KAAL,CAAWD,OADhB;AAEJE,MAAAA,aAAa,EAAE,CAFX;AAGJC,MAAAA,OAAO,EAAE;AAHL,K;;UAMRC,e,GAAkB,UAACC,KAAD,EAAW;AACzB,UAAMC,UAAU,GAAG,MAAKP,KAAL,CAAWC,OAA9B;AACAM,MAAAA,UAAU,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,CAAV,GAAgCH,KAAK,CAACE,MAAN,CAAaE,KAA7C;AACA,UAAIC,YAAY,GAAG,CAAnB,CAHyB,CAIzB;AACA;AACA;AACA;AACA;;AACAJ,MAAAA,UAAU,CAACK,OAAX,CAAmB,UAACC,IAAD,EAAU;AACzB,YAAIA,IAAI,KAAK,EAAb,EAAiB;AACbF,UAAAA,YAAY;AACf;AACJ,OAJD;;AAKA,YAAKG,QAAL,CAAc;AACVb,QAAAA,OAAO,oBAAMM,UAAN,CADG;AAEVJ,QAAAA,aAAa,EAAEQ;AAFL,OAAd;AAIH,K;;UAEDI,a,GAAgB,UAACT,KAAD,EAAW;AACvBA,MAAAA,KAAK,CAACU,cAAN;AACA;;;;;;;;AAOA,UAAMC,QAAQ,GAAG,MAAKjB,KAAtB;;AACA,YAAKc,QAAL,mBACOG,QADP;AAEIb,QAAAA,OAAO,EAAEa,QAAQ,CAACb,OAAT,GAAmB;AAFhC;;AAIA,YAAKF,KAAL,CAAWgB,UAAX;AACH,K;;;;;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKH,aAAL,CAAmBI,IAAnB,CAAwB,IAAxB,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKnB,KAAL,CAAWC,OAAX,CAAmBmB,GAAnB,CAAuB,UAACP,IAAD,EAAOQ,CAAP,EAAa;AACjC,eACI;AAAK,UAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,EAAE,EAAEA,CADR;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,SAAS,EAAC,IAHd;AAII,UAAA,IAAI,EAAEA,CAJV;AAKI,UAAA,KAAK,EAAER,IALX;AAMI,UAAA,QAAQ,EAAE,MAAI,CAACR,eAAL,CAAqBc,IAArB,CAA0B,MAA1B,CANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EASI;AAAO,UAAA,OAAO,EAAEE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBA,CAApB,MATJ,CADJ;AAaH,OAdA,CADL,EA6DI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWI,OAAX,GAAqB,CAArB,IAA0B,KAAKJ,KAAL,CAAWG,aAAX,GAA2B,CAFnE;AAGI,QAAA,KAAK,EACD,KAAKH,KAAL,CAAWI,OAAX,GAAqB,CAArB,IAA0B,KAAKJ,KAAL,CAAWG,aAAX,GAA2B,CAArD,GACI;AACImB,UAAAA,eAAe,EAAE,SADrB;AAEIC,UAAAA,MAAM,EAAC;AAFX,SADJ,GAMI,IAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGA7DJ,CADJ,CADJ;AAiFH;;;;EA/HczB,S;;AAkInB,eAAeC,IAAf","sourcesContent":["import React, {Component} from 'react';\n\n\nclass Form extends Component {\n\n    state = {\n        answers: this.props.answers,\n        minimumAnswer: 0,\n        attempt: 1\n    }\n\n    onChangeHandler = (event) => {\n        const newAnswers = this.state.answers;\n        newAnswers[event.target.name] = event.target.value;\n        let countAnswers = 0;\n        // for (let i in this.state.answers) {\n        //     if (this.state.answers[i] !== \"\") {\n        //         countAnswers++;\n        //     }\n        // };\n        newAnswers.forEach((item) => {\n            if (item === \"\") {\n                countAnswers++;\n            }\n        });\n        this.setState({\n            answers: {...newAnswers},\n            minimumAnswer: countAnswers\n        })\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        /* for API request\n        Send: team name, number task, answers (to validate), attempt number (depends points multiplication)\n        Get: ok/ko, earned points, total points\n        const team = this.props.team;\n        const taskNbr = +this.props.history.location.hash.substring(1);\n        const attempt = this.state.attempt;\n        */\n        const newState = this.state;\n        this.setState({\n            ...newState,\n            attempt: newState.attempt + 1\n        });\n        this.props.changeStep();\n    }\n\n    render() {\n        return (\n            <div className=\"Form\">\n                <form onSubmit={this.submitHandler.bind(this)}>\n                    {this.state.answers.map((item, i) => {\n                        return (\n                            <div key={i}>\n                                <input\n                                    id={i}\n                                    type=\"text\"\n                                    maxLength=\"20\"\n                                    name={i}\n                                    value={item}\n                                    onChange={this.onChangeHandler.bind(this)}\n                                />\n                                <label htmlFor={i}>{i}.</label>\n                            </div>\n                        )\n                    })}\n                    {/* <input\n                        id=\"answer1\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer1\"\n                        value={this.state.answer1}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer2\">1.</label>\n                    <input\n                        id=\"answer2\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer2\"\n                        value={this.state.answer2}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer3\">2.</label>\n                    <input\n                        id=\"answer3\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer3\"\n                        value={this.state.answer3}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer4\">3.</label>\n                    <input\n                        id=\"answer4\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer4\"\n                        value={this.state.answer4}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer5\">4.</label>\n                    <input\n                        id=\"answer5\"\n                        type=\"text\"\n                        maxLength=\"20\"\n                        name=\"answer5\"\n                        value={this.state.answer5}\n                        onChange={this.onChangeHandler.bind(this)}\n                    />\n                    <label htmlFor=\"answer6\">5.</label> */}\n                    <button\n                        type=\"submit\"\n                        disabled={this.state.attempt > 3 || this.state.minimumAnswer < 3}\n                        style={\n                            this.state.attempt > 3 || this.state.minimumAnswer < 3 ? \n                                {\n                                    backgroundColor: '#85e085',\n                                    cursor:'auto'\n                                }\n                                :\n                                null\n                        }\n                    >\n                        Отправить ответы\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}