{"ast":null,"code":"import _toConsumableArray from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/legrin/Ira/NewYear/quest/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/legrin/Ira/NewYear/quest/src/components/tasks/Form.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar Form =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Form, _Component);\n\n  function Form() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Form)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      answers: _this.props.answers,\n      minimumAnswer: 0,\n      attempt: 1,\n      gotPoints: false,\n      earnedPoints: 0,\n      totalPoints: 0,\n      solvedThis: false\n    };\n\n    _this.onChangeHandler = function (event) {\n      if (event.target.value.length <= +_this.props.maxlength) {\n        var newAnswers = _toConsumableArray(_this.state.answers);\n\n        newAnswers[event.target.name] = event.target.value;\n        var countAnswers = 0;\n        newAnswers.forEach(function (item) {\n          if (item !== \"\") {\n            countAnswers++;\n          }\n        });\n\n        if (_this.mount) {\n          _this.setState({\n            answers: _toConsumableArray(newAnswers),\n            minimumAnswer: countAnswers\n          });\n        }\n      }\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n      /* for API request\n      Send: team name, number task, answers (to validate), attempt number (depends points multiplication)\n      Get: ok/ko, earned points, total points\n      const team = this.props.team;\n      const taskNbr = +this.props.history.location.hash.substring(1);\n      const attempt = this.state.attempt;\n      */\n\n      var task = +_this.props.history.location.hash.substring(1);\n      console.log(_this.state);\n\n      if (task === 1) {\n        var body = {\n          teamName: _this.props.team,\n          task: task,\n          time: Date.now(),\n          answers: _this.state.answers,\n          try: _this.state.attempt\n        };\n        axios.post('http://localhost:8080/index.php/api/first_task', body).then(function (res) {\n          console.log(res.data);\n          var nextAttempt = _this.state.attempt + 1;\n\n          if (_this.mount) {\n            _this.setState({\n              attempt: nextAttempt,\n              gotPoints: true,\n              earnedPoints: res.data.points\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (task === 2) {\n        var _body = {\n          teamName: _this.props.team,\n          task: task,\n          time: Date.now(),\n          answers: _this.state.answers,\n          try: _this.state.attempt\n        };\n        axios.post('http://localhost:8080/index.php/api/second_task', _body).then(function (res) {\n          console.log(res.data);\n          var nextAttempt = _this.state.attempt + 1;\n\n          if (_this.mount) {\n            _this.setState({\n              attempt: nextAttempt,\n              gotPoints: true,\n              earnedPoints: res.data.points\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (task === 3) {\n        var _body2 = {\n          teamName: _this.props.team,\n          task: task,\n          time: Date.now(),\n          answers: _this.state.answers,\n          try: _this.state.attempt\n        };\n        axios.post('http://localhost:8080/index.php/api/third_task', _body2).then(function (res) {\n          console.log(res.data);\n          var nextAttempt = _this.state.attempt + 1;\n\n          if (_this.mount) {\n            _this.setState({\n              attempt: nextAttempt,\n              gotPoints: true,\n              earnedPoints: res.data.points\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (task === 4) {\n        var _body3 = {\n          teamName: _this.props.team,\n          task: task,\n          time: Date.now(),\n          answers: _this.state.answers,\n          try: _this.state.attempt\n        };\n        axios.post('http://localhost:8080/index.php/api/forth_task', _body3).then(function (res) {\n          console.log(res.data);\n          var nextAttempt = _this.state.attempt + 1;\n\n          if (_this.mount) {\n            _this.setState({\n              attempt: nextAttempt,\n              gotPoints: true,\n              earnedPoints: res.data.points\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      } else if (task === 5) {\n        var _body4 = {\n          teamName: _this.props.team,\n          task: task,\n          endTime: Date.now(),\n          answers: _this.state.answers,\n          try: _this.state.attempt\n        };\n        console.log(\"body\", _body4);\n        axios.post('http://localhost:8080/index.php/api/five_validate', _body4).then(function (res) {\n          console.log(res.data);\n          var nextAttempt = _this.state.attempt + 1;\n\n          if (_this.mount) {\n            _this.setState({\n              attempt: nextAttempt,\n              gotPoints: true,\n              earnedPoints: res.data.points\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    };\n\n    _this.goNext = function () {\n      _this.props.changeStep();\n    };\n\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.mount = true;\n      var task = +this.props.history.location.hash.substring(1);\n      var body = {\n        teamName: this.props.team,\n        task: task\n      };\n      axios.post('http://localhost:8080/index.php/api/has_solved', body).then(function (res) {\n        if (_this2.mount && task !== 5) {\n          _this2.setState({\n            solvedThis: res.data\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      if (task === 5) {\n        body.start = Date.now();\n        axios.post('http://localhost:8080/index.php/api/five_start', body).then(function (res) {\n          console.log(res.data);\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mount = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var stage = +this.props.history.location.hash.substring(1);\n      return React.createElement(\"div\", {\n        className: \"Form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, !this.state.solvedThis ? React.createElement(\"form\", {\n        onSubmit: this.submitHandler.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, this.state.answers.map(function (item, i) {\n        return React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          id: i,\n          type: \"text\",\n          maxLength: _this3.props.maxlength,\n          name: i,\n          value: item,\n          onChange: _this3.onChangeHandler.bind(_this3),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          htmlFor: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, i + 1, \".\"));\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: stage < 4 && this.state.minimumAnswer < 3,\n        style: stage < 4 && this.state.minimumAnswer < 3 ? {\n          backgroundColor: '#85e085',\n          cursor: 'auto'\n        } : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C \\u043E\\u0442\\u0432\\u0435\\u0442\\u044B\"), this.state.gotPoints && React.createElement(\"p\", {\n        style: {\n          fontWeight: 'bold',\n          padding: '5px',\n          background: '#e5bf9a'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u043F\\u043E\\u043B\\u0443\\u0447\\u0438\\u043B\\u0438: \", this.state.earnedPoints), this.state.gotPoints && React.createElement(\"button\", {\n        onClick: this.goNext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u043B\\u044C\\u0448\\u0435\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '1.5em'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"\\u0412\\u044B \\u0443\\u0436\\u0435 \\u0440\\u0435\\u0448\\u0438\\u043B\\u0438 \\u044D\\u0442\\u043E \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0438 \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u0443\\u043B\\u0443\\u0447\\u0448\\u0438\\u0442\\u044C \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\"), React.createElement(\"button\", {\n        onClick: this.goNext,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u043B\\u044C\\u0448\\u0435\")));\n    }\n  }]);\n\n  return Form;\n}(Component);\n\nexport default Form;","map":{"version":3,"sources":["/Users/legrin/Ira/NewYear/quest/src/components/tasks/Form.jsx"],"names":["React","Component","axios","Form","state","answers","props","minimumAnswer","attempt","gotPoints","earnedPoints","totalPoints","solvedThis","onChangeHandler","event","target","value","length","maxlength","newAnswers","name","countAnswers","forEach","item","mount","setState","submitHandler","preventDefault","task","history","location","hash","substring","console","log","body","teamName","team","time","Date","now","try","post","then","res","data","nextAttempt","points","catch","error","endTime","goNext","changeStep","start","stage","bind","map","i","backgroundColor","cursor","fontWeight","padding","background","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass Form extends Component {\n\n    state = {\n        answers: this.props.answers,\n        minimumAnswer: 0,\n        attempt: 1,\n        gotPoints: false,\n        earnedPoints: 0,\n        totalPoints: 0,\n        solvedThis: false\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        const task = +this.props.history.location.hash.substring(1);\n        const body = {\n            teamName: this.props.team,\n            task: task\n        }\n        axios.post('http://localhost:8080/index.php/api/has_solved', body)\n            .then(res => {\n                if (this.mount && task !== 5) {\n                    this.setState({\n                        solvedThis: res.data\n                    });\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        if (task === 5) {\n            body.start = Date.now();\n            axios.post('http://localhost:8080/index.php/api/five_start', body)\n                .then(res => {\n                    console.log(res.data);\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n    }\n\n    componentWillUnmount(){\n        this.mount = false;\n    }\n\n    onChangeHandler = (event) => {\n        if (event.target.value.length <= +this.props.maxlength) {\n            const newAnswers = [...this.state.answers];\n            newAnswers[event.target.name] = event.target.value;\n            let countAnswers = 0;\n            newAnswers.forEach((item) => {\n                if (item !== \"\") {\n                    countAnswers++;\n                }\n            });\n            if (this.mount) {\n                this.setState({\n                    answers: [...newAnswers],\n                    minimumAnswer: countAnswers\n                });\n            }\n        }\n    }\n\n    submitHandler = (event) => {\n        event.preventDefault();\n        /* for API request\n        Send: team name, number task, answers (to validate), attempt number (depends points multiplication)\n        Get: ok/ko, earned points, total points\n        const team = this.props.team;\n        const taskNbr = +this.props.history.location.hash.substring(1);\n        const attempt = this.state.attempt;\n        */\n        const task = +this.props.history.location.hash.substring(1);\n        console.log(this.state);\n        if (task === 1) {\n            const body = {\n                teamName: this.props.team,\n                task: task,\n                time: Date.now(),\n                answers: this.state.answers,\n                try: this.state.attempt\n            }\n            axios.post('http://localhost:8080/index.php/api/first_task', body)\n                .then(res => {\n                    console.log(res.data);\n                    const nextAttempt = this.state.attempt + 1;\n                    if (this.mount) {\n                        this.setState({\n                            attempt: nextAttempt,\n                            gotPoints: true,\n                            earnedPoints: res.data.points\n                        });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        } else if (task === 2) {\n            const body = {\n                teamName: this.props.team,\n                task: task,\n                time: Date.now(),\n                answers: this.state.answers,\n                try: this.state.attempt\n            }\n            axios.post('http://localhost:8080/index.php/api/second_task', body)\n                .then(res => {\n                    console.log(res.data);\n                    const nextAttempt = this.state.attempt + 1;\n                    if (this.mount) {\n                        this.setState({\n                            attempt: nextAttempt,\n                            gotPoints: true,\n                            earnedPoints: res.data.points\n                        });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        } else if (task === 3) {\n            const body = {\n                teamName: this.props.team,\n                task: task,\n                time: Date.now(),\n                answers: this.state.answers,\n                try: this.state.attempt\n            }\n            axios.post('http://localhost:8080/index.php/api/third_task', body)\n                .then(res => {\n                    console.log(res.data);\n                    const nextAttempt = this.state.attempt + 1;\n                    if (this.mount) {\n                        this.setState({\n                            attempt: nextAttempt,\n                            gotPoints: true,\n                            earnedPoints: res.data.points\n                        });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        } else if (task === 4) {\n            const body = {\n                teamName: this.props.team,\n                task: task,\n                time: Date.now(),\n                answers: this.state.answers,\n                try: this.state.attempt\n            }\n            axios.post('http://localhost:8080/index.php/api/forth_task', body)\n                .then(res => {\n                    console.log(res.data);\n                    const nextAttempt = this.state.attempt + 1;\n                    if (this.mount) {\n                        this.setState({\n                            attempt: nextAttempt,\n                            gotPoints: true,\n                            earnedPoints: res.data.points\n                        });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        } else if (task === 5) {\n            const body = {\n                teamName: this.props.team,\n                task: task,\n                endTime: Date.now(),\n                answers: this.state.answers,\n                try: this.state.attempt\n            }\n            console.log(\"body\", body);\n            axios.post('http://localhost:8080/index.php/api/five_validate', body)\n                .then(res => {\n                    console.log(res.data);\n                    const nextAttempt = this.state.attempt + 1;\n                    if (this.mount) {\n                        this.setState({\n                            attempt: nextAttempt,\n                            gotPoints: true,\n                            earnedPoints: res.data.points\n                        });\n                    }\n                })\n                .catch(error => {\n                    console.log(error);\n                });\n        }\n    }\n\n    goNext = () => {\n        this.props.changeStep();\n    }\n\n    render() {\n        const stage = +this.props.history.location.hash.substring(1);\n        return (\n            <div className=\"Form\">\n                {!this.state.solvedThis ? \n                    <form onSubmit={this.submitHandler.bind(this)}>\n                        {this.state.answers.map((item, i) => {\n                            return (\n                                <div key={i}>\n                                    <input\n                                        id={i}\n                                        type=\"text\"\n                                        maxLength={this.props.maxlength}\n                                        name={i}\n                                        value={item}\n                                        onChange={this.onChangeHandler.bind(this)}\n                                    />\n                                    <label htmlFor={i}>{i + 1}.</label>\n                                </div>\n                            )\n                        })}\n                        <button\n                            type=\"submit\"\n                            disabled={(stage < 4) && this.state.minimumAnswer < 3}\n                            style={(stage < 4) && this.state.minimumAnswer < 3 ? \n                                {\n                                    backgroundColor: '#85e085',\n                                    cursor:'auto'\n                                }\n                                :\n                                null\n                            }\n                        >\n                            Отправить ответы\n                        </button>\n                        {this.state.gotPoints && <p style={{fontWeight: 'bold', padding: '5px', background: '#e5bf9a'}}>Вы получили: {this.state.earnedPoints}</p>}\n                        {this.state.gotPoints && <button onClick={this.goNext}>Дальше</button>}\n                    </form>\n                    :\n                    <div>\n                        <p style={{fontWeight: 'bold', fontSize: '1.5em'}}>Вы уже решили это задание и не можете улучшить результат</p>\n                        <button onClick={this.goNext}>Дальше</button>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}